<%- include('partials/header', {
      title: 'sensors',
      tailwind: true,
      bodyClass: 'bg-black text-gray-300 font-sans'
    }) %>


<style>
    .container {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        text-align: center;
    }

    input {
        background-color: grey;
        color: white;
        border: none;
        padding: 10px;
        margin: 5px;
        font-size: 16px;
        border-radius: 5px;
        text-align: center;
    }

    button {
        background-color: white;
        color: black;
        padding: 10px 15px;
        margin-top: 10px;
        border: none;
        border-radius: 5px;
        cursor: pointer;
    }
</style>


<div class="container">
  <h1 class="text-3xl text-gray-400">ESP32 Data</h2>
  <p>2-way communication with an ESP32 via GET and POST requests</p>
  <br><br>
  <br><br>
  <br><br>
  <pre id="data">Loading...</pre>
  <br><br>
  <br><br>
  <input type="text" id="startTime" placeholder="Enter startTime hh:mm">
  <br><br>
  <input type="text" id="endTime" placeholder="Enter endTime hh:mm">
  <br><br>
  <button id="confirmBtn">Confirm</button>

</div>
<script>
  async function fetchData() {
    try {
      const response = await fetch("/data");
      const data = await response.json();
      document.getElementById("data").innerText = JSON.stringify(data, null, 2);
    } catch (error) {
      console.error("Error fetching data:", error);
    }
  }
  setInterval(fetchData, 3000);
  window.onload = fetchData;
 
  // Send UI data to the server for storage
document.getElementById("confirmBtn").addEventListener("click", () => {
  event.preventDefault();
  const startTime = document.getElementById("startTime").value;
  const endTime = document.getElementById("endTime").value;

  const timePattern = /^([01]\d|2[0-3]):([0-5]\d)$/;

  if (!timePattern.test(startTime) || !timePattern.test(endTime)) {
    alert("Please enter valid times in HH:MM format (e.g., 09:30 or 23:45)");
    return;
  }

  console.log("Sending data:", startTime, endTime); // Debugging step

  fetch(`/update-input?startTime=${encodeURIComponent(startTime)}&endTime=${encodeURIComponent(endTime)}`)
    .then(response => response.json())
    .then(data => console.log("Server response:", data)) // Check server response
    .catch(error => console.error("Error:", error));
  });
</script>
<%- include('partials/footer') %>

